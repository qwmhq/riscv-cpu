Determining the location of the ModelSim executable...

Using: /home/quwam/apps/intelFPGA_lite/21.1/questa_fse/bin

To specify a ModelSim executable directory, select: Tools -> Options -> EDA Tool Options
Note: if both Questa Intel FPGA Edition and ModelSim executables are available, Questa Intel FPGA Edition will be used.

**** Generating the ModelSim Testbench ****

quartus_eda --gen_testbench --tool=modelsim_oem --format=vhdl --write_settings_files=off riscv_cpu -c riscv_cpu --vector_source="/home/quwam/programming-stuff/cpu-stuff/riscv-cpu/RegisterFile.vwf" --testbench_file="/home/quwam/programming-stuff/cpu-stuff/riscv-cpu/simulation/qsim/RegisterFile.vwf.vht"

Info: *******************************************************************Info: Running Quartus Prime EDA Netlist Writer    Info: Version 21.1.0 Build 842 10/21/2021 SJ Lite Edition    Info: Copyright (C) 2021  Intel Corporation. All rights reserved.    Info: Your use of Intel Corporation's design tools, logic functions     Info: and other software and tools, and any partner logic     Info: functions, and any output files from any of the foregoing     Info: (including device programming or simulation files), and any     Info: associated documentation or information are expressly subject     Info: to the terms and conditions of the Intel Program License     Info: Subscription Agreement, the Intel Quartus Prime License Agreement,    Info: the Intel FPGA IP License Agreement, or other applicable license    Info: agreement, including, without limitation, that your use is for    Info: the sole purpose of programming logic devices manufactured by    Info: Intel and sold by Intel or its authorized distributors.  Please    Info: refer to the applicable agreement for further details, at    Info: https://fpgasoftware.intel.com/eula.    Info: Processing started: Wed Jul 31 00:00:16 2024Info: Command: quartus_eda --gen_testbench --tool=modelsim_oem --format=vhdl --write_settings_files=off riscv_cpu -c riscv_cpu --vector_source=/home/quwam/programming-stuff/cpu-stuff/riscv-cpu/RegisterFile.vwf --testbench_file=/home/quwam/programming-stuff/cpu-stuff/riscv-cpu/simulation/qsim/RegisterFile.vwf.vhtWarning (18236): Number of processors has not been specified which may cause overloading on shared machines.  Set the global assignment NUM_PARALLEL_PROCESSORS in your QSF to an appropriate value for best performance.
 test bench files
[0]" in vector source file when writing test bench filesInfo (201002): Generated VHDL Test Bench File /home/quwam/programming-stuff/cpu-stuff/riscv-cpu/simulation/qsim/RegisterFile.vwf.vht for simulationInfo: Quartus Prime EDA Netlist Writer was successful. 0 errors, 67 warnings    Info: Peak virtual memory: 613 megabytes    Info: Processing ended: Wed Jul 31 00:00:16 2024    Info: Elapsed time: 00:00:00    Info: Total CPU time (on all processors): 00:00:00
Completed successfully. 

**** Generating the functional simulation netlist ****

quartus_eda --write_settings_files=off --simulation --functional=on --flatten_buses=off --tool=modelsim_oem --format=vhdl --output_directory="/home/quwam/programming-stuff/cpu-stuff/riscv-cpu/simulation/qsim/" riscv_cpu -c riscv_cpu

Info: *******************************************************************Info: Running Quartus Prime EDA Netlist Writer    Info: Version 21.1.0 Build 842 10/21/2021 SJ Lite Edition    Info: Copyright (C) 2021  Intel Corporation. All rights reserved.    Info: Your use of Intel Corporation's design tools, logic functions     Info: and other software and tools, and any partner logic     Info: functions, and any output files from any of the foregoing     Info: (including device programming or simulation files), and any     Info: associated documentation or information are expressly subject     Info: to the terms and conditions of the Intel Program License     Info: Subscription Agreement, the Intel Quartus Prime License Agreement,    Info: the Intel FPGA IP License Agreement, or other applicable license    Info: agreement, including, without limitation, that your use is for    Info: the sole purpose of programming logic devices manufactured by    Info: Intel and sold by Intel or its authorized distributors.  Please    Info: refer to the applicable agreement for further details, at    Info: https://fpgasoftware.intel.com/eula.    Info: Processing started: Wed Jul 31 00:00:17 2024Info: Command: quartus_eda --write_settings_files=off --simulation=on --functional=on --flatten_buses=off --tool=modelsim_oem --format=vhdl --output_directory=/home/quwam/programming-stuff/cpu-stuff/riscv-cpu/simulation/qsim/ riscv_cpu -c riscv_cpuWarning (18236): Number of processors has not been specified which may cause overloading on shared machines.  Set the global assignment NUM_PARALLEL_PROCESSORS in your QSF to an appropriate value for best performance.Info (204019): Generated file riscv_cpu.vho in folder "/home/quwam/programming-stuff/cpu-stuff/riscv-cpu/simulation/qsim//" for EDA simulation toolInfo: Quartus Prime EDA Netlist Writer was successful. 0 errors, 1 warning    Info: Peak virtual memory: 617 megabytes    Info: Processing ended: Wed Jul 31 00:00:18 2024    Info: Elapsed time: 00:00:01    Info: Total CPU time (on all processors): 00:00:01
Completed successfully. 

**** Generating the ModelSim .do script ****

/home/quwam/programming-stuff/cpu-stuff/riscv-cpu/simulation/qsim/riscv_cpu.do generated.

Completed successfully. 

**** Running the ModelSim simulation ****

/home/quwam/apps/intelFPGA_lite/21.1/questa_fse/bin/vsim -c -do riscv_cpu.do

Reading pref.tcl
# 2021.2
# do riscv_cpu.do
# ** Warning: (vlib-34) Library already exists at "work".
# Errors: 0, Warnings: 1
# Questa Intel Starter FPGA Edition-64 vcom 2021.2 Compiler 2021.04 Apr 14 2021
# Start time: 00:00:18 on Jul 31,2024
# vcom -work work riscv_cpu.vho 
# -- Loading package STANDARD
# -- Loading package TEXTIO
# -- Loading package std_logic_1164
# -- Loading package VITAL_Timing
# -- Loading package VITAL_Primitives
# -- Loading package cycloneive_atom_pack
# -- Loading package cycloneive_components
# -- Compiling entity hard_block
# -- Compiling architecture structure of hard_block
# -- Loading package dffeas_pack
# -- Loading package altera_primitives_components
# -- Compiling entity RegisterFile
# -- Compiling architecture structure of RegisterFile
# End time: 00:00:19 on Jul 31,2024, Elapsed time: 0:00:01# Errors: 0, Warnings: 0
# Questa Intel Starter FPGA Edition-64 vcom 2021.2 Compiler 2021.04 Apr 14 2021
# Start time: 00:00:19 on Jul 31,2024
# vcom -work work RegisterFile.vwf.vht 
# -- Loading package STANDARD
# -- Loading package TEXTIO
# -- Loading package std_logic_1164
# -- Compiling entity RegisterFile_vhd_vec_tst
# -- Compiling architecture RegisterFile_arch of RegisterFile_vhd_vec_tst
# End time: 00:00:19 on Jul 31,2024, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vsim -voptargs=""+acc"" -c -t 1ps -L cycloneive -L altera -L altera_mf -L 220model -L sgate -L altera_lnsim work.RegisterFile_vhd_vec_tst # Start time: 00:00:19 on Jul 31,2024# ** Note: (vsim-3812) Design is being optimized...
# //  Questa Intel Starter FPGA Edition-64# //  Version 2021.2 linux_x86_64 Apr 14 2021# //# //  Copyright 1991-2021 Mentor Graphics Corporation# //  All Rights Reserved.# //# //  QuestaSim and its associated documentation contain trade# //  secrets and commercial or financial information that are the property of# //  Mentor Graphics Corporation and are privileged, confidential,# //  and exempt from disclosure under the Freedom of Information Act,# //  5 U.S.C. Section 552. Furthermore, this information# //  is prohibited from disclosure under the Trade Secrets Act,# //  18 U.S.C. Section 1905.# //
# Loading std.standard# Loading std.textio(body)# Loading ieee.std_logic_1164(body)# Loading work.registerfile_vhd_vec_tst(registerfile_arch)#1# Loading ieee.vital_timing(body)# Loading ieee.vital_primitives(body)# Loading altera.dffeas_pack# Loading altera.altera_primitives_components# Loading cycloneive.cycloneive_atom_pack(body)# Loading cycloneive.cycloneive_components# Loading work.registerfile(structure)#1# Loading work.hard_block(structure)#1# Loading ieee.std_logic_arith(body)# Loading cycloneive.cycloneive_io_obuf(arch)#1# Loading cycloneive.cycloneive_io_ibuf(arch)#1# Loading cycloneive.cycloneive_clkctrl(vital_clkctrl)#1# Loading cycloneive.cycloneive_ena_reg(behave)#1# Loading cycloneive.cycloneive_lcell_comb(vital_lcell_comb)#1# Loading cycloneive.cycloneive_lcell_comb(vital_lcell_comb)#2# Loading cycloneive.cycloneive_lcell_comb(vital_lcell_comb)#3# Loading cycloneive.cycloneive_lcell_comb(vital_lcell_comb)#4# Loading cycloneive.cycloneive_lcell_comb(vital_lcell_comb)#5# Loading altera.dffeas(vital_dffeas)#1# Loading cycloneive.cycloneive_lcell_comb(vital_lcell_comb)#6# Loading cycloneive.cycloneive_lcell_comb(vital_lcell_comb)#7# Loading cycloneive.cycloneive_lcell_comb(vital_lcell_comb)#8# Loading cycloneive.cycloneive_lcell_comb(vital_lcell_comb)#9# Loading cycloneive.cycloneive_lcell_comb(vital_lcell_comb)#10# Loading cycloneive.cycloneive_lcell_comb(vital_lcell_comb)#11# Loading cycloneive.cycloneive_lcell_comb(vital_lcell_comb)#12# Loading cycloneive.cycloneive_lcell_comb(vital_lcell_comb)#13# Loading cycloneive.cycloneive_lcell_comb(vital_lcell_comb)#14# Loading cycloneive.cycloneive_lcell_comb(vital_lcell_comb)#15# Loading cycloneive.cycloneive_lcell_comb(vital_lcell_comb)#16# Loading cycloneive.cycloneive_lcell_comb(vital_lcell_comb)#17# Loading cycloneive.cycloneive_lcell_comb(vital_lcell_comb)#18# Loading cycloneive.cycloneive_lcell_comb(vital_lcell_comb)#19# Loading cycloneive.cycloneive_lcell_comb(vital_lcell_comb)#20# Loading cycloneive.cycloneive_lcell_comb(vital_lcell_comb)#21# Loading cycloneive.cycloneive_lcell_comb(vital_lcell_comb)#22# Loading cycloneive.cycloneive_lcell_comb(vital_lcell_comb)#23# Loading cycloneive.cycloneive_lcell_comb(vital_lcell_comb)#24# Loading cycloneive.cycloneive_lcell_comb(vital_lcell_comb)#25# Loading cycloneive.cycloneive_lcell_comb(vital_lcell_comb)#26# Loading cycloneive.cycloneive_lcell_comb(vital_lcell_comb)#27# Loading cycloneive.cycloneive_lcell_comb(vital_lcell_comb)#28# Loading cycloneive.cycloneive_lcell_comb(vital_lcell_comb)#29# Loading cycloneive.cycloneive_lcell_comb(vital_lcell_comb)#30# Loading cycloneive.cycloneive_lcell_comb(vital_lcell_comb)#31# Loading cycloneive.cycloneive_lcell_comb(vital_lcell_comb)#32# Loading cycloneive.cycloneive_lcell_comb(vital_lcell_comb)#33# Loading cycloneive.cycloneive_lcell_comb(vital_lcell_comb)#34# Loading cycloneive.cycloneive_lcell_comb(vital_lcell_comb)#35# Loading cycloneive.cycloneive_lcell_comb(vital_lcell_comb)#36# Loading cycloneive.cycloneive_lcell_comb(vital_lcell_comb)#37# Loading cycloneive.cycloneive_lcell_comb(vital_lcell_comb)#38# Loading cycloneive.cycloneive_lcell_comb(vital_lcell_comb)#39# Loading cycloneive.cycloneive_lcell_comb(vital_lcell_comb)#40# Loading cycloneive.cycloneive_lcell_comb(vital_lcell_comb)#41# Loading cycloneive.cycloneive_lcell_comb(vital_lcell_comb)#42# Loading cycloneive.cycloneive_lcell_comb(vital_lcell_comb)#43# Loading cycloneive.cycloneive_lcell_comb(vital_lcell_comb)#44# Loading cycloneive.cycloneive_lcell_comb(vital_lcell_comb)#45# Loading cycloneive.cycloneive_lcell_comb(vital_lcell_comb)#46# Loading cycloneive.cycloneive_lcell_comb(vital_lcell_comb)#47# Loading cycloneive.cycloneive_lcell_comb(vital_lcell_comb)#48# Loading cycloneive.cycloneive_lcell_comb(vital_lcell_comb)#49# Loading cycloneive.cycloneive_lcell_comb(vital_lcell_comb)#50# Loading cycloneive.cycloneive_lcell_comb(vital_lcell_comb)#51# Loading cycloneive.cycloneive_lcell_comb(vital_lcell_comb)#52# Loading cycloneive.cycloneive_lcell_comb(vital_lcell_comb)#53# Loading cycloneive.cycloneive_lcell_comb(vital_lcell_comb)#54# Loading cycloneive.cycloneive_lcell_comb(vital_lcell_comb)#55# Loading cycloneive.cycloneive_lcell_comb(vital_lcell_comb)#56# Loading cycloneive.cycloneive_lcell_comb(vital_lcell_comb)#57# Loading cycloneive.cycloneive_lcell_comb(vital_lcell_comb)#58# Loading cycloneive.cycloneive_lcell_comb(vital_lcell_comb)#59# Loading cycloneive.cycloneive_lcell_comb(vital_lcell_comb)#60# Loading cycloneive.cycloneive_lcell_comb(vital_lcell_comb)#61# Loading cycloneive.cycloneive_lcell_comb(vital_lcell_comb)#62# Loading cycloneive.cycloneive_lcell_comb(vital_lcell_comb)#63# Loading cycloneive.cycloneive_lcell_comb(vital_lcell_comb)#64# Loading cycloneive.cycloneive_lcell_comb(vital_lcell_comb)#65# Loading cycloneive.cycloneive_lcell_comb(vital_lcell_comb)#66# Loading cycloneive.cycloneive_lcell_comb(vital_lcell_comb)#67# Loading cycloneive.cycloneive_lcell_comb(vital_lcell_comb)#68# Loading cycloneive.cycloneive_lcell_comb(vital_lcell_comb)#69# Loading cycloneive.cycloneive_lcell_comb(vital_lcell_comb)#70# Loading cycloneive.cycloneive_lcell_comb(vital_lcell_comb)#71# Loading cycloneive.cycloneive_lcell_comb(vital_lcell_comb)#72# Loading cycloneive.cycloneive_lcell_comb(vital_lcell_comb)#73# Loading cycloneive.cycloneive_lcell_comb(vital_lcell_comb)#74# Loading cycloneive.cycloneive_lcell_comb(vital_lcell_comb)#75# Loading cycloneive.cycloneive_lcell_comb(vital_lcell_comb)#76# Loading cycloneive.cycloneive_lcell_comb(vital_lcell_comb)#77
# after#36
# End time: 00:00:22 on Jul 31,2024, Elapsed time: 0:00:03# Errors: 0, Warnings: 0
Completed successfully. 

**** Converting ModelSim VCD to vector waveform ****

Reading /home/quwam/programming-stuff/cpu-stuff/riscv-cpu/RegisterFile.vwf...

Reading /home/quwam/programming-stuff/cpu-stuff/riscv-cpu/simulation/qsim/riscv_cpu.msim.vcd...

Processing channel transitions... 

Writing the resulting VWF to /home/quwam/programming-stuff/cpu-stuff/riscv-cpu/simulation/qsim/riscv_cpu_20240731000022.sim.vwf

Finished VCD to VWF conversion.

Completed successfully. 

All completed.